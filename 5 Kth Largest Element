import java.util.Collections;
import java.util.PriorityQueue;

public class Heap_kth_smallest_element {
    public static int kthSmallest(int[] arr, int k) {
        // Max Heap to store k smallest elements
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        
        for (int i = 0; i < k; i++) {
            pq.add(arr[i]);
        }
        
        for (int i = k; i < arr.length; i++) {
            if (arr[i] < pq.peek()) {
                pq.poll();
                pq.add(arr[i]);
            }
        }
        return pq.peek();
    }

    public static void main(String[] args) {
        int nums[] = {7, 10, 4, 3, 20, 15};
        int k = 3;

        System.out.println(kthSmallest(nums, k));
    }
}

/*
Output:
7

Time Complexity: O(n log k)
Space Complexity: O(k)
*/
