import java.util.PriorityQueue;
import java.util.Collections;

public class KthSmallest_Heap {
    
    public static int findKthSmallest(int[] arr, int k) {
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());

        for (int i = 0; i < k; i++) {
            pq.add(arr[i]);
        }

        for (int i = k; i < arr.length; i++) {
            if (arr[i] < pq.peek()) {
                pq.poll();
                pq.add(arr[i]);
            }
        }

        return pq.peek();
    }

    public static void main(String[] args) {
        int[] arr = {7, 10, 4, 3, 20, 15};
        int k = 3;

        int result = findKthSmallest(arr, k);
        System.out.println("Kth Smallest Element: " + result);
    }
}

/*
Output:
Kth Smallest Element: 7

Time Complexity: O(n log k)
Space Complexity: O(k)
*/
